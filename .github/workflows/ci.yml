name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run All Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: auth_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5433 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Install proto/grpc tools
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.34.1
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.4.0

      - name: Run Unit and Contract Tests
        run: |
          echo "üß™ Running Unit Tests..."
          go test ./tests/domain -v -race
          echo "ü§ù Running Contract Tests..."
          go test ./tests/contracts -v -race

      - name: Run Integration Tests
        env:
          DB_HOST: localhost
          DB_PORT: "5433"
          DB_USER: postgres
          DB_PASSWORD: password
          DB_NAME: auth_test
          DB_SSLMODE: disable
          JWT_SECRET_KEY: test-ci-secret
          JWT_ACCESS_TOKEN_DURATION: 15
          JWT_REFRESH_TOKEN_DURATION: 168
        run: |
          echo "üîó Running Integration Tests..."
          go test -tags=integration ./tests/integration/tests/repository_tests -v -race -p 1 -count=1
          go test -tags=integration ./tests/integration/tests/auth_handler_tests -v -race -p 1 -count=1
          go test -tags=integration ./tests/integration/tests/auth_http_tests -v -race -p 1 -count=1
          go test -tags=integration ./tests/integration/tests/auth_grpc_tests -v -race -p 1 -count=1
          go test -tags=integration ./tests/integration/tests/auth_e2e_tests -v -race -p 1 -count=1

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'

      - name: Build application
        run: |
          echo "üî® Building Quest Auth..."
          go build ./...